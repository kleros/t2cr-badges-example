{"version":3,"sources":["abis.js","index.js"],"names":["t2crABI","constant","inputs","name","outputs","type","payable","stateMutability","anonymous","indexed","badgeABI","App","state","web3","tokenData","t2crContract","badgeContract","fetchData","_callee4","_this$state","tokensWithBadges","regenerator_default","a","wrap","_context4","prev","next","_this","methods","queryAddresses","call","sent","values","filter","address","forEach","Promise","all","map","_ref2","Object","asyncToGenerator","mark","_callee","_context","queryTokens","tokenID","objectSpread","defineProperty","stop","this","_x","apply","arguments","keys","_ref3","_callee3","_context3","_ref4","_callee2","_context2","getTokenInfo","_x3","abrupt","_x2","setState","Web3","window","currentProvider","eth","Contract","_this$state2","react_default","createElement","className","id","onClick","JSON","stringify","symbolMultihash","key","src","concat","Component","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"2XAAaA,EAAU,CACrB,CACEC,UAAU,EACVC,OAAQ,GACRC,KAAM,0BACNC,QAAS,CACP,CACED,KAAM,GACNE,KAAM,YAGVC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,GACRC,KAAM,WACNC,QAAS,CACP,CACED,KAAM,GACNE,KAAM,YAGVC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,GACRC,KAAM,sBACNC,QAAS,CACP,CACED,KAAM,GACNE,KAAM,UAGVC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,GACRC,KAAM,uBACNC,QAAS,CACP,CACED,KAAM,GACNE,KAAM,YAGVC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,GACRC,KAAM,kBACNC,QAAS,CACP,CACED,KAAM,GACNE,KAAM,YAGVC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,GACRC,KAAM,wBACNC,QAAS,CACP,CACED,KAAM,GACNE,KAAM,YAGVC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,CACN,CACEC,KAAM,GACNE,KAAM,YAGVF,KAAM,aACNC,QAAS,CACP,CACED,KAAM,GACNE,KAAM,YAGVC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,GACRC,KAAM,aACNC,QAAS,CACP,CACED,KAAM,GACNE,KAAM,YAGVC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,CACN,CACEC,KAAM,GACNE,KAAM,WAER,CACEF,KAAM,GACNE,KAAM,YAGVF,KAAM,uBACNC,QAAS,CACP,CACED,KAAM,GACNE,KAAM,YAGVC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,GACRC,KAAM,wBACNC,QAAS,CACP,CACED,KAAM,GACNE,KAAM,YAGVC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,CACN,CACEC,KAAM,GACNE,KAAM,YAGVF,KAAM,SACNC,QAAS,CACP,CACED,KAAM,OACNE,KAAM,UAER,CACEF,KAAM,SACNE,KAAM,UAER,CACEF,KAAM,OACNE,KAAM,WAER,CACEF,KAAM,kBACNE,KAAM,UAER,CACEF,KAAM,YACNE,KAAM,UAER,CACEF,KAAM,SACNE,KAAM,UAGVC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,GACRC,KAAM,uBACNC,QAAS,CACP,CACED,KAAM,GACNE,KAAM,YAGVC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,CACN,CACEC,KAAM,GACNE,KAAM,YAGVF,KAAM,qBACNC,QAAS,CACP,CACED,KAAM,GACNE,KAAM,YAGVC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,GACRC,KAAM,6BACNC,QAAS,CACP,CACED,KAAM,GACNE,KAAM,YAGVC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,KAAM,cACNE,KAAM,WAER,CACEF,KAAM,uBACNE,KAAM,SAER,CACEF,KAAM,gBACNE,KAAM,UAER,CACEF,KAAM,YACNE,KAAM,WAER,CACEF,KAAM,8BACNE,KAAM,WAER,CACEF,KAAM,mBACNE,KAAM,WAER,CACEF,KAAM,2BACNE,KAAM,WAER,CACEF,KAAM,yBACNE,KAAM,WAER,CACEF,KAAM,yBACNE,KAAM,WAER,CACEF,KAAM,wBACNE,KAAM,YAGVC,SAAS,EACTC,gBAAiB,aACjBF,KAAM,eAER,CACEG,WAAW,EACXN,OAAQ,CACN,CACEO,SAAS,EACTN,KAAM,aACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,cACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,WACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,UACNE,KAAM,SAER,CACEI,SAAS,EACTN,KAAM,YACNE,KAAM,SAGVF,KAAM,oBACNE,KAAM,SAER,CACEG,WAAW,EACXN,OAAQ,CACN,CACEO,SAAS,EACTN,KAAM,WACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,eACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,QACNE,KAAM,SAER,CACEI,SAAS,EACTN,KAAM,SACNE,KAAM,YAGVF,KAAM,eACNE,KAAM,SAER,CACEG,WAAW,EACXN,OAAQ,CACN,CACEO,SAAS,EACTN,KAAM,WACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,cACNE,KAAM,YAGVF,KAAM,yBACNE,KAAM,SAER,CACEG,WAAW,EACXN,OAAQ,CACN,CACEO,SAAS,EACTN,KAAM,WACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,eACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,WACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,SACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,SACNE,KAAM,YAGVF,KAAM,mBACNE,KAAM,SAER,CACEG,WAAW,EACXN,OAAQ,CACN,CACEO,SAAS,EACTN,KAAM,kBACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,YACNE,KAAM,WAGVF,KAAM,eACNE,KAAM,SAER,CACEG,WAAW,EACXN,OAAQ,CACN,CACEO,SAAS,EACTN,KAAM,cACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,aACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,kBACNE,KAAM,YAGVF,KAAM,UACNE,KAAM,SAER,CACEG,WAAW,EACXN,OAAQ,CACN,CACEO,SAAS,EACTN,KAAM,cACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,aACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,SACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,YACNE,KAAM,WAGVF,KAAM,WACNE,KAAM,SAER,CACEG,WAAW,EACXN,OAAQ,CACN,CACEO,SAAS,EACTN,KAAM,cACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,aACNE,KAAM,WAER,CA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,KAAM,YAGVF,KAAM,iBACNC,QAAS,CACP,CACED,KAAM,WACNE,KAAM,QAER,CACEF,KAAM,YACNE,KAAM,WAER,CACEF,KAAM,iBACNE,KAAM,WAER,CACEF,KAAM,yBACNE,KAAM,WAER,CACEF,KAAM,wBACNE,KAAM,WAER,CACEF,KAAM,WACNE,KAAM,QAER,CACEF,KAAM,UACNE,KAAM,cAER,CACEF,KAAM,iBACNE,KAAM,YAGVC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,CACN,CACEC,KAAM,WACNE,KAAM,WAER,CACEF,KAAM,WACNE,KAAM,WAER,CACEF,KAAM,SACNE,KAAM,YAGVF,KAAM,eACNC,QAAS,CACP,CACED,KAAM,WACNE,KAAM,QAER,CACEF,KAAM,qBACNE,KAAM,WAER,CACEF,KAAM,WACNE,KAAM,cAER,CACEF,KAAM,kBACNE,KAAM,cAER,CACEF,KAAM,mBACNE,KAAM,cAER,CACEF,KAAM,aACNE,KAAM,YAGVC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,CACN,CACEC,KAAM,WACNE,KAAM,WAER,CACEF,KAAM,WACNE,KAAM,WAER,CACEF,KAAM,SACNE,KAAM,WAER,CACEF,KAAM,eACNE,KAAM,YAGVF,KAAM,mBACNC,QAAS,CACP,CACED,KAAM,gBACNE,KAAM,eAGVC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,GACRC,KAAM,aACNC,QAAS,CACP,CACED,KAAM,QACNE,KAAM,YAGVC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,GACRC,KAAM,gBACNC,QAAS,CACP,CACED,KAAM,WACNE,KAAM,WAER,CACEF,KAAM,SACNE,KAAM,WAER,CACEF,KAAM,aACNE,KAAM,WAER,CACEF,KAAM,wBACNE,KAAM,WAER,CACEF,KAAM,oBACNE,KAAM,YAGVC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,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Q,CACN,CACEO,SAAS,EACTN,KAAM,WACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,eACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,QACNE,KAAM,SAER,CACEI,SAAS,EACTN,KAAM,SACNE,KAAM,YAGVF,KAAM,eACNE,KAAM,SAER,CACEG,WAAW,EACXN,OAAQ,CACN,CACEO,SAAS,EACTN,KAAM,WACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,cACNE,KAAM,YAGVF,KAAM,yBACNE,KAAM,SAER,CACEG,WAAW,EACXN,OAAQ,CACN,CACEO,SAAS,EACTN,KAAM,WACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,eACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,WACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,SACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,SACNE,KAAM,YAGVF,KAAM,mBACNE,KAAM,SAER,CACEG,WAAW,EACXN,OAAQ,CACN,CACEO,SAAS,EACTN,KAAM,kBACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,YACNE,KAAM,WAGVF,KAAM,eACNE,KAAM,SAER,CACEG,WAAW,EACXN,OAAQ,CACN,CACEO,SAAS,EACTN,KAAM,cACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,aACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,kBACNE,KAAM,YAGVF,KAAM,UACNE,KAAM,SAER,CACEG,WAAW,EACXN,OAAQ,CACN,CACEO,SAAS,EACTN,KAAM,cACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,aACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,SACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,YACNE,KAAM,WAGVF,KAAM,WACNE,KAAM,SAER,CACEG,WAAW,EACXN,OAAQ,CACN,CACEO,SAAS,EACTN,KAAM,cACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,aACNE,KAAM,WAER,CACEI,SAAS,EACTN,KAAM,UACNE,KAAM,YAGVF,KAAM,SACNE,KAAM,SAER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","file":"static/js/main.247b9d95.chunk.js","sourcesContent":["export const t2crABI = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"challengePeriodDuration\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"governor\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"arbitratorExtraData\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"loserStakeMultiplier\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"challengeReward\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"sharedStakeMultiplier\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"tokensList\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes32\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"arbitrator\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"\",\n        type: \"address\"\n      },\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"addressToSubmissions\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes32\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"winnerStakeMultiplier\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"\",\n        type: \"bytes32\"\n      }\n    ],\n    name: \"tokens\",\n    outputs: [\n      {\n        name: \"name\",\n        type: \"string\"\n      },\n      {\n        name: \"ticker\",\n        type: \"string\"\n      },\n      {\n        name: \"addr\",\n        type: \"address\"\n      },\n      {\n        name: \"symbolMultihash\",\n        type: \"string\"\n      },\n      {\n        name: \"networkID\",\n        type: \"string\"\n      },\n      {\n        name: \"status\",\n        type: \"uint8\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"MULTIPLIER_PRECISION\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"disputeIDToTokenID\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes32\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"arbitrationFeesWaitingTime\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"_arbitrator\",\n        type: \"address\"\n      },\n      {\n        name: \"_arbitratorExtraData\",\n        type: \"bytes\"\n      },\n      {\n        name: \"_metaEvidence\",\n        type: \"string\"\n      },\n      {\n        name: \"_governor\",\n        type: \"address\"\n      },\n      {\n        name: \"_arbitrationFeesWaitingTime\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_challengeReward\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_challengePeriodDuration\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_sharedStakeMultiplier\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_winnerStakeMultiplier\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_loserStakeMultiplier\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_requester\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"_challenger\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"_tokenID\",\n        type: \"bytes32\"\n      },\n      {\n        indexed: false,\n        name: \"_status\",\n        type: \"uint8\"\n      },\n      {\n        indexed: false,\n        name: \"_disputed\",\n        type: \"bool\"\n      }\n    ],\n    name: \"TokenStatusChange\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_tokenID\",\n        type: \"bytes32\"\n      },\n      {\n        indexed: true,\n        name: \"_contributor\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"_side\",\n        type: \"uint8\"\n      },\n      {\n        indexed: false,\n        name: \"_value\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Contribution\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_tokenID\",\n        type: \"bytes32\"\n      },\n      {\n        indexed: true,\n        name: \"_challenger\",\n        type: \"address\"\n      }\n    ],\n    name: \"ChallengeDepositPlaced\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_tokenID\",\n        type: \"bytes32\"\n      },\n      {\n        indexed: true,\n        name: \"_contributor\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"_request\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"_round\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"_value\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"RewardWithdrawal\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_metaEvidenceID\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"_evidence\",\n        type: \"string\"\n      }\n    ],\n    name: \"MetaEvidence\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_arbitrator\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"_disputeID\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"_metaEvidenceID\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Dispute\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_arbitrator\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"_disputeID\",\n        type: \"uint256\"\n      },\n      {\n        indexed: true,\n        name: \"_party\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"_evidence\",\n        type: \"string\"\n      }\n    ],\n    name: \"Evidence\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_arbitrator\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"_disputeID\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"_ruling\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Ruling\",\n    type: \"event\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_name\",\n        type: \"string\"\n      },\n      {\n        name: \"_ticker\",\n        type: \"string\"\n      },\n      {\n        name: \"_addr\",\n        type: \"address\"\n      },\n      {\n        name: \"_symbolMultihash\",\n        type: \"string\"\n      },\n      {\n        name: \"_networkID\",\n        type: \"string\"\n      }\n    ],\n    name: \"requestStatusChange\",\n    outputs: [],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_tokenID\",\n        type: \"bytes32\"\n      }\n    ],\n    name: \"challengeRequest\",\n    outputs: [],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_tokenID\",\n        type: \"bytes32\"\n      },\n      {\n        name: \"_side\",\n        type: \"uint8\"\n      }\n    ],\n    name: \"fundLatestRound\",\n    outputs: [],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_tokenID\",\n        type: \"bytes32\"\n      },\n      {\n        name: \"_request\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_round\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"withdrawFeesAndRewards\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_tokenID\",\n        type: \"bytes32\"\n      }\n    ],\n    name: \"timeout\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_disputeID\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_ruling\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"rule\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_tokenID\",\n        type: \"bytes32\"\n      },\n      {\n        name: \"_evidence\",\n        type: \"string\"\n      }\n    ],\n    name: \"submitEvidence\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_challengePeriodDuration\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"changeTimeToChallenge\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_challengeReward\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"changeChallengeReward\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_governor\",\n        type: \"address\"\n      }\n    ],\n    name: \"changeGovernor\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_arbitrationFeesWaitingTime\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"changeArbitrationFeesWaitingTime\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_sharedStakeMultiplier\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"changeSharedStakeMultiplier\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_winnerStakeMultiplier\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"changeWinnerStakeMultiplier\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_loserStakeMultiplier\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"changeLoserStakeMultiplier\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_tokenID\",\n        type: \"bytes32\"\n      }\n    ],\n    name: \"isPermitted\",\n    outputs: [\n      {\n        name: \"allowed\",\n        type: \"bool\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_tokenID\",\n        type: \"bytes32\"\n      }\n    ],\n    name: \"getTokenInfo\",\n    outputs: [\n      {\n        name: \"name\",\n        type: \"string\"\n      },\n      {\n        name: \"ticker\",\n        type: \"string\"\n      },\n      {\n        name: \"addr\",\n        type: \"address\"\n      },\n      {\n        name: \"symbolMultihash\",\n        type: \"string\"\n      },\n      {\n        name: \"networkID\",\n        type: \"string\"\n      },\n      {\n        name: \"status\",\n        type: \"uint8\"\n      },\n      {\n        name: \"numberOfRequests\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_tokenID\",\n        type: \"bytes32\"\n      },\n      {\n        name: \"_request\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"getRequestInfo\",\n    outputs: [\n      {\n        name: \"disputed\",\n        type: \"bool\"\n      },\n      {\n        name: \"disputeID\",\n        type: \"uint256\"\n      },\n      {\n        name: \"submissionTime\",\n        type: \"uint256\"\n      },\n      {\n        name: \"challengeRewardBalance\",\n        type: \"uint256\"\n      },\n      {\n        name: \"challengerDepositTime\",\n        type: \"uint256\"\n      },\n      {\n        name: \"resolved\",\n        type: \"bool\"\n      },\n      {\n        name: \"parties\",\n        type: \"address[3]\"\n      },\n      {\n        name: \"numberOfRounds\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_tokenID\",\n        type: \"bytes32\"\n      },\n      {\n        name: \"_request\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_round\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"getRoundInfo\",\n    outputs: [\n      {\n        name: \"appealed\",\n        type: \"bool\"\n      },\n      {\n        name: \"oldWinnerTotalCost\",\n        type: \"uint256\"\n      },\n      {\n        name: \"paidFees\",\n        type: \"uint256[3]\"\n      },\n      {\n        name: \"requiredForSide\",\n        type: \"uint256[3]\"\n      },\n      {\n        name: \"totalContributed\",\n        type: \"uint256[3]\"\n      },\n      {\n        name: \"feeRewards\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_tokenID\",\n        type: \"bytes32\"\n      },\n      {\n        name: \"_request\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_round\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_contributor\",\n        type: \"address\"\n      }\n    ],\n    name: \"getContributions\",\n    outputs: [\n      {\n        name: \"contributions\",\n        type: \"uint256[3]\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"tokenCount\",\n    outputs: [\n      {\n        name: \"count\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"countByStatus\",\n    outputs: [\n      {\n        name: \"disputed\",\n        type: \"uint256\"\n      },\n      {\n        name: \"absent\",\n        type: \"uint256\"\n      },\n      {\n        name: \"registered\",\n        type: \"uint256\"\n      },\n      {\n        name: \"registrationRequested\",\n        type: \"uint256\"\n      },\n      {\n        name: \"clearingRequested\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_cursor\",\n        type: \"bytes32\"\n      },\n      {\n        name: \"_count\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_filter\",\n        type: \"bool[8]\"\n      },\n      {\n        name: \"_oldestFirst\",\n        type: \"bool\"\n      },\n      {\n        name: \"_tokenAddr\",\n        type: \"address\"\n      }\n    ],\n    name: \"queryTokens\",\n    outputs: [\n      {\n        name: \"values\",\n        type: \"bytes32[]\"\n      },\n      {\n        name: \"hasMore\",\n        type: \"bool\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\n\nexport const badgeABI = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"challengePeriodDuration\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"governor\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"arbitratorExtraData\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"loserStakeMultiplier\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"disputeIDToAddress\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"challengeReward\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"sharedStakeMultiplier\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"arbitrator\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"winnerStakeMultiplier\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"\",\n        type: \"address\"\n      }\n    ],\n    name: \"addresses\",\n    outputs: [\n      {\n        name: \"status\",\n        type: \"uint8\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"MULTIPLIER_PRECISION\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"addressList\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"arbitrationFeesWaitingTime\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"_arbitrator\",\n        type: \"address\"\n      },\n      {\n        name: \"_arbitratorExtraData\",\n        type: \"bytes\"\n      },\n      {\n        name: \"_metaEvidence\",\n        type: \"string\"\n      },\n      {\n        name: \"_governor\",\n        type: \"address\"\n      },\n      {\n        name: \"_arbitrationFeesWaitingTime\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_challengeReward\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_challengePeriodDuration\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_sharedStakeMultiplier\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_winnerStakeMultiplier\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_loserStakeMultiplier\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_requester\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"_challenger\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"_address\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"_status\",\n        type: \"uint8\"\n      },\n      {\n        indexed: false,\n        name: \"_disputed\",\n        type: \"bool\"\n      }\n    ],\n    name: \"AddressStatusChange\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_address\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"_contributor\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"_side\",\n        type: \"uint8\"\n      },\n      {\n        indexed: false,\n        name: \"_value\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Contribution\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_address\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"_challenger\",\n        type: \"address\"\n      }\n    ],\n    name: \"ChallengeDepositPlaced\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_address\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"_contributor\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"_request\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"_round\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"_value\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"RewardWithdrawal\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_metaEvidenceID\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"_evidence\",\n        type: \"string\"\n      }\n    ],\n    name: \"MetaEvidence\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_arbitrator\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"_disputeID\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"_metaEvidenceID\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Dispute\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_arbitrator\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"_disputeID\",\n        type: \"uint256\"\n      },\n      {\n        indexed: true,\n        name: \"_party\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"_evidence\",\n        type: \"string\"\n      }\n    ],\n    name: \"Evidence\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"_arbitrator\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"_disputeID\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"_ruling\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Ruling\",\n    type: \"event\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_address\",\n        type: \"address\"\n      }\n    ],\n    name: \"requestStatusChange\",\n    outputs: [],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_address\",\n        type: \"address\"\n      }\n    ],\n    name: \"challengeRequest\",\n    outputs: [],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_address\",\n        type: \"address\"\n      },\n      {\n        name: \"_side\",\n        type: \"uint8\"\n      }\n    ],\n    name: \"fundLatestRound\",\n    outputs: [],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_address\",\n        type: \"address\"\n      },\n      {\n        name: \"_request\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_round\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"withdrawFeesAndRewards\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_address\",\n        type: \"address\"\n      }\n    ],\n    name: \"timeout\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_disputeID\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_ruling\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"rule\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_address\",\n        type: \"address\"\n      },\n      {\n        name: \"_evidence\",\n        type: \"string\"\n      }\n    ],\n    name: \"submitEvidence\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_challengePeriodDuration\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"changeTimeToChallenge\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_challengeReward\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"changeChallengeReward\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_governor\",\n        type: \"address\"\n      }\n    ],\n    name: \"changeGovernor\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_arbitrationFeesWaitingTime\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"changeArbitrationFeesWaitingTime\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_sharedStakeMultiplier\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"changeSharedStakeMultiplier\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_winnerStakeMultiplier\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"changeWinnerStakeMultiplier\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_loserStakeMultiplier\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"changeLoserStakeMultiplier\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_value\",\n        type: \"bytes32\"\n      }\n    ],\n    name: \"isPermitted\",\n    outputs: [\n      {\n        name: \"allowed\",\n        type: \"bool\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_address\",\n        type: \"address\"\n      },\n      {\n        name: \"_request\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"getRequestInfo\",\n    outputs: [\n      {\n        name: \"disputed\",\n        type: \"bool\"\n      },\n      {\n        name: \"disputeID\",\n        type: \"uint256\"\n      },\n      {\n        name: \"submissionTime\",\n        type: \"uint256\"\n      },\n      {\n        name: \"challengeRewardBalance\",\n        type: \"uint256\"\n      },\n      {\n        name: \"challengerDepositTime\",\n        type: \"uint256\"\n      },\n      {\n        name: \"resolved\",\n        type: \"bool\"\n      },\n      {\n        name: \"parties\",\n        type: \"address[3]\"\n      },\n      {\n        name: \"numberOfRounds\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_address\",\n        type: \"address\"\n      },\n      {\n        name: \"_request\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_round\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"getRoundInfo\",\n    outputs: [\n      {\n        name: \"appealed\",\n        type: \"bool\"\n      },\n      {\n        name: \"oldWinnerTotalCost\",\n        type: \"uint256\"\n      },\n      {\n        name: \"paidFees\",\n        type: \"uint256[3]\"\n      },\n      {\n        name: \"requiredForSide\",\n        type: \"uint256[3]\"\n      },\n      {\n        name: \"totalContributed\",\n        type: \"uint256[3]\"\n      },\n      {\n        name: \"feeRewards\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_address\",\n        type: \"address\"\n      },\n      {\n        name: \"_request\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_round\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_contributor\",\n        type: \"address\"\n      }\n    ],\n    name: \"getContributions\",\n    outputs: [\n      {\n        name: \"contributions\",\n        type: \"uint256[3]\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"addressCount\",\n    outputs: [\n      {\n        name: \"count\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"countByStatus\",\n    outputs: [\n      {\n        name: \"disputed\",\n        type: \"uint256\"\n      },\n      {\n        name: \"absent\",\n        type: \"uint256\"\n      },\n      {\n        name: \"registered\",\n        type: \"uint256\"\n      },\n      {\n        name: \"registrationRequested\",\n        type: \"uint256\"\n      },\n      {\n        name: \"clearingRequested\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_cursor\",\n        type: \"address\"\n      },\n      {\n        name: \"_count\",\n        type: \"uint256\"\n      },\n      {\n        name: \"_filter\",\n        type: \"bool[8]\"\n      },\n      {\n        name: \"_oldestFirst\",\n        type: \"bool\"\n      }\n    ],\n    name: \"queryAddresses\",\n    outputs: [\n      {\n        name: \"values\",\n        type: \"address[]\"\n      },\n      {\n        name: \"hasMore\",\n        type: \"bool\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Web3 from \"web3\";\n\nimport { t2crABI, badgeABI } from \"./abis\";\n\nimport \"./styles.css\";\n\nconst KOVAN_NETWORK_ID = 42;\n\nclass App extends Component {\n  state = {\n    web3: null,\n    tokenData: null,\n    t2crContract: null,\n    badgeContract: null\n  };\n\n  componentDidMount() {\n    const web3 = new Web3(window.web3.currentProvider);\n    const t2crContract = new web3.eth.Contract(\n      t2crABI,\n      \"0x7a2e4142f573994f76ffe9d8236ba141beed2810\"\n    );\n    const badgeContract = new web3.eth.Contract(\n      badgeABI,\n      \"0x1f28f15360c4ebbec6abf90ae57fabe7423d040c\"\n    );\n    this.setState({ web3, t2crContract, badgeContract });\n  }\n\n  fetchData = async () => {\n    const { t2crContract, badgeContract } = this.state;\n\n    // Get tokens addresses that have the badge.\n    let tokensWithBadges = (await badgeContract.methods\n      .queryAddresses(\n        \"0x0000000000000000000000000000000000000000\", // A token address to start/end the query from. Set to zero means unused.\n        10, // Number of items to return at once.\n        [\n          false, // Do not include absent tokens.\n          true, // Include registered tokens.\n          false, // Do not include tokens with registration requests.\n          true, // Include tokens with clearing requests.\n          false, // Do not include tokens with challenged registration requests.\n          true, // Include tokens with challenged clearing requests.\n          false, // Include token if caller is the author of a pending request.\n          false // Include token if caller is the challenger of a pending request.\n        ],\n        true // Return oldest first.\n      )\n      .call()).values;\n\n    // Since the contract returns fixed sized arrays, we must filter unused items.\n    tokensWithBadges = tokensWithBadges.filter(\n      address => address !== \"0x0000000000000000000000000000000000000000\"\n    );\n    // Construct and add addresses the response object.\n    const tokenData = {};\n    tokensWithBadges.forEach(address => {\n      tokenData[address] = {};\n    });\n\n    // Fetch all token IDs for each address.\n    await Promise.all(\n      tokensWithBadges.map(async address => {\n        let tokenIDs = (await t2crContract.methods\n          .queryTokens(\n            \"0x0000000000000000000000000000000000000000\", // A token address to start/end the query from. Set to zero means unused.\n            10, // Number of items to return at once.\n            [\n              false, // Do not include absent tokens.\n              true, // Include registered tokens.\n              false, // Do not include tokens with registration requests.\n              true, // Include tokens with clearing requests.\n              false, // Do not include tokens with challenged registration requests.\n              true, // Include tokens with challenged clearing requests.\n              false, // Include token if caller is the author of a pending request.\n              false // Include token if caller is the challenger of a pending request.\n            ],\n            true,\n            address // Return oldest first.\n          )\n          .call()).values;\n\n        // As with addresses, the contract returns a fixed sized array so it is necessary to filter out unused slots.\n        tokenIDs = tokenIDs.filter(\n          tokenID =>\n            tokenID !==\n            \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n        );\n        // Add token IDs to the information object.\n        tokenIDs.forEach(tokenID => {\n          tokenData[address] = {\n            ...tokenData[address],\n            [tokenID]: {\n              ...tokenData[address][tokenID],\n              [tokenID]: {}\n            }\n          };\n        });\n      })\n    );\n\n    // With the token IDs, get the information and add it to the object.\n    await Promise.all(\n      Object.keys(tokenData).map(\n        async address =>\n          await Promise.all(\n            Object.keys(tokenData[address]).map(async tokenID => {\n              tokenData[address][\n                tokenID\n              ] = await t2crContract.methods.getTokenInfo(tokenID).call();\n            })\n          )\n      )\n    );\n    this.setState({ tokenData });\n  };\n\n  render() {\n    const { web3, tokenData } = this.state;\n    if (!web3)\n      return (\n        <div>\n          <h1>Waiting Metamask</h1>\n          <small>\n            <h5>\n              Remeber to have metamask installed and set to the Kovan testnet.\n            </h5>\n          </small>\n        </div>\n      );\n    else\n      return (\n        <div className=\"text-center body\">\n          <div id=\"metamask-loaded\">\n            <div className=\"fetch-tokens\">\n              <h1 className=\"h3 mb-3 font-weight-normal\">\n                Fetch Tokens With Badges\n              </h1>\n              <small>Remeber to set metamask network to Kovan</small>\n              <br />\n              <br />\n              <button\n                className=\"btn btn-primary btn-block\"\n                onClick={this.fetchData}\n                type=\"button\"\n              >\n                Fetch All\n              </button>\n              <br />\n            </div>\n            {tokenData && (\n              <div className=\"output\">\n                <pre id=\"data-display\">\n                  {JSON.stringify(tokenData, null, 2)}\n                </pre>\n                <div id=\"symbols\">\n                  {Object.keys(tokenData).map(address => {\n                    return Object.keys(tokenData[address]).map(tokenID => {\n                      const { symbolMultihash } = tokenData[address][tokenID];\n                      return (\n                        <img\n                          key={tokenID}\n                          src={`https://staging-cfs.s3.us-east-2.amazonaws.com/${symbolMultihash}`}\n                          className=\"img-thumbnail symbol\"\n                        />\n                      );\n                    });\n                  })}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}